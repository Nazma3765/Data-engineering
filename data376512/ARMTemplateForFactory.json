{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "data376512"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"Azurefiles_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Azurefiles'"
		},
		"ls_datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake'"
		},
		"sql_db_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sql_db'"
		},
		"ls_datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://blob2blob12.dfs.core.windows.net/"
		},
		"ls_github_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"sql_db_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "datasql3765.database.windows.net"
		},
		"sql_db_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql@124"
		},
		"sql_db_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminnazma"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sourceblob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-24T05:19:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sourceblob')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Last_load",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "current_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from source_data where date_id > '@{activity('Last_load').output.value[0].last_load}' AND date_id <= '@{activity('current_load').output.value[0].max_date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "source_data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_bronze",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Last_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select *from water_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "water_table"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "current_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(Date_Id) as max_date from source_data",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "source_data"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Watermarkupdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Updatewatermarktable]",
							"storedProcedureParameters": {
								"lastload": {
									"value": {
										"value": "@activity('current_load').output.value[0].max_date",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sql_db",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_bronze')]",
				"[concat(variables('factoryId'), '/linkedServices/sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_source')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Branch_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Branch_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Dealer_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Model_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Revenue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Revenue",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Units_Sold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Units_sold",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Date_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Day",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Day",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealername",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_git",
								"type": "DatasetReference",
								"parameters": {
									"load_flag": "SalesData.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"table_name": {
										"value": "output",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_git')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azurefiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azurefiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azurefiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azurefiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "destination"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawdata",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_git')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_github",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"load_flag": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "anshlambagit/Azure-DE-Project-Resources/refs/heads/main/Raw%20Data/@{dataset().load_flag}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_github')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_db",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Branch_Id",
						"type": "varchar"
					},
					{
						"name": "Dealer_Id",
						"type": "varchar"
					},
					{
						"name": "Model_Id",
						"type": "varchar"
					},
					{
						"name": "Revenue",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Units_sold",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Date_Id",
						"type": "varchar"
					},
					{
						"name": "Day",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BranchName",
						"type": "varchar"
					},
					{
						"name": "Dealername",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourceblob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "mtcars-parquet.csv",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Row ID",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azurefiles')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Azurefiles_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_github')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_github_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sql_db_properties_typeProperties_server')]",
					"database": "[parameters('sql_db_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sql_db_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sql_db_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}